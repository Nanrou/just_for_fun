<style>

    .container {
        margin: 10rpx 18rpx;
        background: #fbf9fe;
    }

    .start_part {
        margin: 18rpx 0;
        display: inline-block;
        width: 100%;
        height: 600rpx;
        text-align: center;
    }

    .xiongji {
        width: 210rpx;
        height: 210rpx;
    }

    .dice_view {
        text-align: center;
    }

    .dice {
        width: 120rpx;
        height: 120rpx;
        margin-right: 35rpx;
        margin-left: 35rpx;
    }

    .dice100 {
        margin: 20rpx 10rpx;
        font-size: 66rpx;
        text-align: center;
    }

    .content {
        width: 100%;
    }

    ul {
    }

    li {
        display: block;
    }

    span {
        display: inline-block;
        width: 65%;
        padding-left: 75rpx;
    }

    picker {
        margin: 20rpx 10rpx;
    }

    .picker20 {
        margin: 40rpx;
        background: #fff;
        text-align: center;
    }

    .line {
        width: 100%;
        height: 4rpx;
        background: lightgray;
        margin: 20rpx 0rpx;
    }

    .final_part_btn {
        margin: 24rpx 24rpx;
        margin-top: 42rpx;
    }

    .hint {
        font-size: 28rpx;
        color: lightblue;
    }

    .interesting_skill_single_btn {
        width: 30%;
        display: inline-block;
        float: right;
        margin: 0rpx 20rpx;
    }

    .input_block {
        margin: 40rpx;
        background: #fff;
        border:1rpx solid;
    }

</style>


<template>
    <view class="container">
        <view class="header">
            <view><image src="../common/images/xiongji.png" mode="aspectFit" class="xiongji"></image></view>
            <!--
            <view style="display: inline-block; margin: 10rpx 20rpx" >Dice
                <button @tap="dice_in" style="display: inline;" >IN</button>
                <button @tap="dice_out" style="display: inline;" >OUT</button>
            </view>
            <view style="display: inline-block; margin: 10rpx 20rpx">Age
                <button @tap="age_in" style="display: inline;" >IN</button>
                <button @tap="age_out" style="display: inline;" >OUT</button>
            </view>
            <view style="display: inline-block; margin: 10rpx 20rpx">Job
                <button @tap="job_in" style="display: inline;" >IN</button>
                <button @tap="job_out" style="display: inline;" >OUT</button>
            </view>
            <view style="display: inline-block; margin: 10rpx 20rpx">Skill
                <button @tap="skill_in" style="display: inline;" >IN</button>
                <button @tap="skill_out" style="display: inline;" >OUT</button>
            </view>
            <view style="display: inline-block; margin: 10rpx 20rpx">Characteristic_Skill
                <button @tap="interesting_skill_in" style="display: inline;" >IN</button>
                <button @tap="interesting_skill_out" style="display: inline;" >OUT</button>
            </view>
            -->
        </view>

        <view class="content">
            <block wx:if="{{start_part}}">
                <view animation="{{start_animation}}">
                    <view class="start_part">
                        <view>准备好造人了吗？</view>
                        <view style="display: inline-block;margin-top: 20%">
                            <button class="final_part_btn" @tap="handler_start_next" type="primary">Go</button>
                        </view>
                    </view>
                </view>
            </block>

            <block wx:if="{{dice_part}}" >
                <view animation="{{dice_animation}}">
                    <view class="line"></view>

                    <view class="dice_view">
                        <block wx:if="{{dice_action}}">
                            <image src="../common/images/dice/dice_action.gif" mode="aspectFit" class="dice"></image>
                            <image src="../common/images/dice/dice_action.gif" mode="aspectFit" class="dice"></image>
                            <image src="../common/images/dice/dice_action.gif" mode="aspectFit" class="dice"></image>
                        </block>
                        <block wx:else>
                            <block wx:for="{{init_dice}}">
                                <image src="../common/images/dice/dice_{{item}}.png" mode="aspectFit" class="dice" ></image>
                            </block>
                        </block>
                    </view>

                    <view class="property">
                        <ul>
                            <block wx:for="{{property}}" wx:key="name">
                                <li>
                                    <span>{{item.name}}</span>
                                    <button @tap="control_dice" data-index="{{index}}" style="display: inline;" disabled="{{item.dice_lock}}" >{{item.status}}</button>
                                </li>
                            </block>
                        </ul>
                    </view>

                    <button class="final_part_btn" @tap="handle_dice_next" type="primary" disabled="{{dice_btn_disable}}">{{dice_btn_text}}</button>
                </view>
            </block>

            <block wx:if="{{age_part}}">
                <view animation="{{age_animation}}">
                    <view class="line"></view>
                    <text>选择年龄</text>
                    <view>

                        <slider bindchange="age_change" value="36" min="15" max="90" show-value disabled="{{age_slider_lock}}"/>
                        <block wx:if="{{age}}">
                            <view>
                                <view>
                                    <text>{{age}}岁</text>
                                </view>
                                <text>{{age_affect}}</text>
                                <block  wx:if="{{age_btn_hidden}}">
                                    <button class="final_part_btn" @tap="age_btn">请谨慎确认，回不了头的了喔</button>
                                </block>
                            </view>
                        </block>

                        <block wx:if="{{age_affect_block}}">
                            <view class="line"></view>
                            <view wx:if="{{age < 20}}">
                                <picker mode="multiSelector" bindchange="handle20picker" value="{{age_affect_20_multiArray_index}}" range="{{age_affect_20_multiArray}}">
                                    <view class="picker20">
                                        当前选择为： 力量-{{tmp_disable_str}}，体型-{{tmp_disable_siz}}。
                                    </view>
                                </picker>
                                力量现在是{{property[0].sum - tmp_disable_str}}点，体型现在是{{property[2].sum - tmp_disable_siz}}点。
                                <view>
                                    教育 -5 后，现在是{{property[7].sum - 5}}点。
                                </view>

                                <view>
                                    <view style="text-align: center; margin: 10rpx 18rpx">
                                        <view style="margin: 10rpx 18rpx">
                                            幸运女神会对你露出微信吗？
                                        </view>
                                        <view class="dice_view">
                                            <block wx:if="{{dice_action}}">
                                                <image src="../common/images/dice/dice_action.gif" mode="aspectFit" class="dice"></image>
                                                <image src="../common/images/dice/dice_action.gif" mode="aspectFit" class="dice"></image>
                                                <image src="../common/images/dice/dice_action.gif" mode="aspectFit" class="dice"></image>
                                            </block>
                                            <block wx:else>
                                                <block wx:for="{{init_dice}}">
                                                    <image src="../common/images/dice/dice_{{item}}.png" mode="aspectFit" class="dice" ></image>
                                                </block>
                                            </block>
                                        </view>
                                    </view>
                                    <button @tap="reroll_luck_dice" disabled="{{reroll_luck_btn}}">{{reroll_luck_btn_text}}</button>
                                </view>
                                <view style="margin-top: 40rpx">
                                    <button class="final_part_btn" @tap="handle20next" type="primary" disabled="{{next_age}}">下一步</button>
                                </view>
                            </view>

                            <view wx:elif="{{age < 40}}">
                                <view class="dice100">
                                    {{dice100_decade}} {{dice100_single}}
                                </view>

                                <button @tap="handle40btn" disabled="{{age_40_btn}}">{{age_40_text}}</button>
                                <view style="margin-top: 40rpx">
                                    <button class="final_part_btn" @tap="handle40next" type="primary" disabled="{{next_age}}">下一步</button>
                                </view>
                            </view>

                            <view wx:else>
                                <view wx:if="{{age < 50}}">
                                    <picker mode="multiSelector" bindchange="handle_age_picker" data-num="5" value="{{age_affect_multiArray_index}}" range="{{age_affect_multiArray[0]}}">
                                        当前选择为：
                                        <view class="picker20">
                                            力量-{{tmp_disable_str}}，体质-{{tmp_disable_con}}，敏捷-{{tmp_disable_dex}}。
                                        </view>
                                        {{age_help_text}}
                                    </picker>
                                <view>
                                    力量现在是{{property[0].sum - tmp_disable_str}}点，体质现在是{{property[1].sum - tmp_disable_con}}点， 敏捷现在是{{property[3].sum - tmp_disable_dex}}点。
                                </view>
                                <view>
                                    外貌 -5 后，现在是{{property[4].sum - 5}}点。
                                </view>
                                <view class="dice100">
                                    {{dice100_decade}} {{dice100_single}}
                                </view>
                                <button @tap="handle_age_btn" data-index="0" data-times_index="0" disabled="{{age_btn[0]}}" style="margin-bottom: 18rpx">{{age_text[0]}}</button>
                                <button @tap="handle_age_btn" data-index="1" data-times_index="0" disabled="{{age_btn[1]}}" style="margin-bottom: 18rpx">{{age_text[1]}}</button>
                                <view style="margin-top: 40rpx">
                                    <button class="final_part_btn" @tap="handle_age_next" data-app="5" type="primary" disabled="{{next_age || punish_point_done}}">下一步</button>
                                </view>
                                </view>
                                <view wx:elif="{{age < 60}}">
                                    <picker mode="multiSelector" bindchange="handle_age_picker" data-num="10" value="{{age_affect_multiArray_index}}" range="{{age_affect_multiArray[1]}}">
                                    当前选择为：
                                    <view class="picker20">
                                    力量-{{tmp_disable_str}}，体质-{{tmp_disable_con}}，敏捷-{{tmp_disable_dex}}。
                                    </view>
                                    {{age_help_text}}
                                    </picker>
                                    <view>
                                    力量现在是{{property[0].sum - tmp_disable_str}}点，体质现在是{{property[1].sum - tmp_disable_con}}点， 敏捷现在是{{property[3].sum - tmp_disable_dex}}点。
                                    </view>
                                    <view>
                                    外貌 -10 后，现在是{{property[4].sum - 10}}点。
                                    </view>
                                    <view class="dice100">
                                    {{dice100_decade}} {{dice100_single}}
                                    </view>
                                    <button @tap="handle_age_btn" data-index="0" data-times_index="1" disabled="{{age_btn[0]}}" style="margin-bottom: 18rpx">{{age_text[0]}}</button>
                                    <button @tap="handle_age_btn" data-index="1" data-times_index="1" disabled="{{age_btn[1]}}" style="margin-bottom: 18rpx">{{age_text[1]}}</button>
                                    <button @tap="handle_age_btn" data-index="2" data-times_index="1" disabled="{{age_btn[2]}}" style="margin-bottom: 18rpx">{{age_text[2]}}</button>
                                    <view style="margin-top: 40rpx">
                                    <button class="final_part_btn" @tap="handle_age_next" data-app="10" type="primary" disabled="{{next_age || punish_point_done}}">下一步</button>
                                    </view>
                                </view>
                                <view wx:elif="{{age < 70}}">
                                    <picker mode="multiSelector" bindchange="handle_age_picker" data-num="20" value="{{age_affect_multiArray_index}}" range="{{age_affect_multiArray[2]}}">
                                    当前选择为：
                                    <view class="picker20">
                                    力量-{{tmp_disable_str}}，体质-{{tmp_disable_con}}，敏捷-{{tmp_disable_dex}}。
                                    </view>
                                    {{age_help_text}}
                                    </picker>
                                    <view>
                                    力量现在是{{property[0].sum - tmp_disable_str}}点，体质现在是{{property[1].sum - tmp_disable_con}}点， 敏捷现在是{{property[3].sum - tmp_disable_dex}}点。
                                    </view>
                                    <view>
                                    外貌 -15 后，现在是{{property[4].sum - 15}}点。
                                    </view>
                                    <view class="dice100">
                                    {{dice100_decade}} {{dice100_single}}
                                    </view>
                                    <button @tap="handle_age_btn" data-index="0" data-times_index="2" disabled="{{age_btn[0]}}" style="margin-bottom: 18rpx">{{age_text[0]}}</button>
                                    <button @tap="handle_age_btn" data-index="1" data-times_index="2" disabled="{{age_btn[1]}}" style="margin-bottom: 18rpx">{{age_text[1]}}</button>
                                    <button @tap="handle_age_btn" data-index="2" data-times_index="2" disabled="{{age_btn[2]}}" style="margin-bottom: 18rpx">{{age_text[2]}}</button>
                                    <button @tap="handle_age_btn" data-index="3" data-times_index="2" disabled="{{age_btn[3]}}" style="margin-bottom: 18rpx">{{age_text[3]}}</button>
                                    <view style="margin-top: 40rpx">
                                    <button class="final_part_btn" @tap="handle_age_next" data-app="15" type="primary" disabled="{{next_age || punish_point_done}}">下一步</button>
                                    </view>
                                </view>
                                <view wx:elif="{{age < 80}}">
                                    <picker mode="multiSelector" bindchange="handle_age_picker" data-num="40" value="{{age_affect_multiArray_index}}" range="{{age_affect_multiArray[3]}}">
                                    当前选择为：
                                    <view class="picker20">
                                    力量-{{tmp_disable_str}}，体质-{{tmp_disable_con}}，敏捷-{{tmp_disable_dex}}。
                                    </view>
                                    {{age_help_text}}
                                    </picker>
                                    <view>
                                    力量现在是{{property[0].sum - tmp_disable_str}}点，体质现在是{{property[1].sum - tmp_disable_con}}点， 敏捷现在是{{property[3].sum - tmp_disable_dex}}点。
                                    </view>
                                    <view>
                                    外貌 -20 后，现在是{{property[4].sum - 20}}点。
                                    </view>
                                    <view class="dice100">
                                    {{dice100_decade}} {{dice100_single}}
                                    </view>
                                    <button @tap="handle_age_btn" data-index="0" data-times_index="3" disabled="{{age_btn[0]}}" style="margin-bottom: 18rpx">{{age_text[0]}}</button>
                                    <button @tap="handle_age_btn" data-index="1" data-times_index="3" disabled="{{age_btn[1]}}" style="margin-bottom: 18rpx">{{age_text[1]}}</button>
                                    <button @tap="handle_age_btn" data-index="2" data-times_index="3" disabled="{{age_btn[2]}}" style="margin-bottom: 18rpx">{{age_text[2]}}</button>
                                    <button @tap="handle_age_btn" data-index="3" data-times_index="3" disabled="{{age_btn[3]}}" style="margin-bottom: 18rpx">{{age_text[3]}}</button>
                                    <view style="margin-top: 40rpx">
                                    <button class="final_part_btn" @tap="handle_age_next" data-app="20" type="primary" disabled="{{next_age || punish_point_done}}">下一步</button>
                                    </view>
                                </view>
                                <view wx:else>
                                     <picker mode="multiSelector" bindchange="handle_age_picker" data-num="80" value="{{age_affect_multiArray_index}}" range="{{age_affect_multiArray[4]}}">
                                     当前选择为：
                                     <view class="picker20">
                                     力量-{{tmp_disable_str}}，体质-{{tmp_disable_con}}，敏捷-{{tmp_disable_dex}}。
                                     </view>
                                     {{age_help_text}}
                                     </picker>
                                     <view>
                                     力量现在是{{property[0].sum - tmp_disable_str}}点，体质现在是{{property[1].sum - tmp_disable_con}}点， 敏捷现在是{{property[3].sum - tmp_disable_dex}}点。
                                     </view>
                                     <view>
                                     外貌 -25 后，现在是{{property[4].sum - 25}}点。
                                     </view>
                                     <view class="dice100">
                                     {{dice100_decade}} {{dice100_single}}
                                     </view>
                                     <button @tap="handle_age_btn" data-index="0" data-times_index="3" disabled="{{age_btn[0]}}" style="margin-bottom: 18rpx">{{age_text[0]}}</button>
                                     <button @tap="handle_age_btn" data-index="1" data-times_index="3" disabled="{{age_btn[1]}}" style="margin-bottom: 18rpx">{{age_text[1]}}</button>
                                     <button @tap="handle_age_btn" data-index="2" data-times_index="3" disabled="{{age_btn[2]}}" style="margin-bottom: 18rpx">{{age_text[2]}}</button>
                                     <button @tap="handle_age_btn" data-index="3" data-times_index="3" disabled="{{age_btn[3]}}" style="margin-bottom: 18rpx">{{age_text[3]}}</button>
                                     <view style="margin-top: 40rpx">
                                     <button class="final_part_btn" @tap="handle_age_next" data-app="25" type="primary" disabled="{{next_age || punish_point_done}}">下一步</button>
                                     </view>
                                 </view>
                            </view>
                        </block>
                    </view>
                </view>
            </block>

            <block wx:if="{{job_part}}">
                <view class="line"></view>
                <view animation="{{job_animation}}">
                    <view class="section__title">职业选择器</view>
                    <picker bindchange="job_picker" value="{{index}}" range="{{job_data}}" range-key="职业">
                        确定职业：
                        <view class="picker20">
                            {{job_title}}
                        </view>
                    </picker>
                    <block wx:if="{{job_detail}}">
                        <text>
                            {{"职业描述：\n" + job_description}}
                        </text>
                        <block wx:if="{{job_subtitle}}">
                            <view>职业细分</view>
                            <picker bindchange="job_sub_picker" value="{{index}}" range="{{job_sub_data}}" range-key="职业">
                                确定具体职业：
                                <view class="picker20">
                                    {{job_sub_title}}
                                </view>
                            </picker>
                        </block>

                        <view>信用范围：{{job_credit}}</view>
                        <view>本职技能点：{{job_skill_point}}</view>
                        <view>本职技能：{{job_skill}}</view>

                    </block>

                    <button class="final_part_btn" @tap="handle_job_next" type="primary" disabled="{{job_btn_disable}}">决定好当一个{{job_btn_text}}了吗？</button>
                </view>
            </block>

            <block wx:if="{{skill_part}}">
                <view class="line"></view>
                <view animation="{{skill_animation}}">
                    <view>职业: {{job_btn_text}}</view>
                    <view>剩余可用本职技能点: {{skill_point - skill_used_point}}</view>
                    <view>
                        <text>信用评级({{skill_credit_min}} - {{skill_credit_max}})</text>
                        <view>
                            <text class="hint">已自动分配{{skill_credit_min}}技能点到信用评级</text>
                        </view>
                        <slider bindchange="handle_skill_credit" min="{{skill_credit_min}}" max="{{skill_credit_max}}" show-value/>
                    </view>

                    <view style="margin-bottom: 40rpx">
                        <text>本职技能</text>
                    </view>
                    <block wx:for="{{professional_skill}}">
                        <view class="line"></view>
                        <view>{{item}}</view>
                        <block wx:if="{{skill_special_skill[item]}}">
                            <view class="picker20">
                                <picker bindchange="handle_skill_picker" data-index="{{index}}" data-item="{{item}}" range="{{skill_special_skill[item]}}">
                                    <view class="picker">
                                        当前选择：{{skill_final_profession[index]['name']}}
                                    </view>
                                </picker>
                            </view>
                        </block>
                        <block wx:elif="{{item == '其他'}}">
                            <view class="picker20">
                                <picker bindchange="handle_skill_normal_picker" data-index="{{index}}" range="{{normal_skill}}">
                                    <view class="picker">
                                        当前选择：{{skill_final_profession[index]['name']}}
                                    </view>
                                </picker>
                            </view>
                        </block>
                        <view>
                            <slider bindchange="handle_skill_slider" data-index="{{index}}" data-default="{{skill_default_point[skill_final_profession[index]['name']]}}" min="{{skill_default_point[skill_final_profession[index]['name']]}}" max="90" value="{{skill_final_profession[index]['point']}}" disabled="{{skill_profession_slider_disabled[index]}}" show-value/>
                        </view>
                    </block>

                    <!-- 其实上下这两部分可以合起来，只是我不懂如何在这里进行类型判断。下面的主要逻辑和上面类似，只是加了一层循环。 -->

                    <block wx:for="{{option_professional_skill}}">
                        <view class="line"></view>

                        <picker bindchange="handle_skill_option_picker" data-index="{{index + professional_skill.length}}" data-item="{{item}}" range="{{item}}">
                            <view class="picker">
                                当前选择：{{skill_final_profession[index + professional_skill.length]['name']}}
                            </view>
                        </picker>

                        <block wx:if="{{skill_special_skill[skill_final_profession[index + professional_skill.length]['name']]}}">
                            <view class="picker20">
                                <picker bindchange="handle_skill_picker" data-index="{{index + professional_skill.length}}" data-item="{{skill_final_profession[index + professional_skill.length]['name']}}" range="{{skill_special_skill[skill_final_profession[index + professional_skill.length]['name']]}}">
                                    <view class="picker">
                                        当前选择：{{skill_final_profession[index + professional_skill.length]['name']}}
                                    </view>
                                </picker>
                            </view>
                        </block>
                        <view>
                            <slider bindchange="handle_skill_slider" data-index="{{index + professional_skill.length}}" data-default="{{skill_default_point[skill_final_profession[index + professional_skill.length]['name']]}}" min="{{skill_default_point[skill_final_profession[index + professional_skill.length]['name']]}}" max="90" value="{{skill_final_profession[index + professional_skill.length]['point']}}" disabled="{{skill_profession_slider_disabled[index + professional_skill.length]}}" show-value/>
                        </view>
                    </block>
                    <button class="final_part_btn" @tap="handle_skill_next" type="primary" disabled="{{skill_btn_disable}}">{{skill_btn_text}}</button>
                </view>
            </block>

            <block wx:if="{{interesting_skill_part}}">
                <view animation="{{interesting_skill_animation}}">
                    <view>目前剩余的兴趣技能点为：{{interesting_skill_point - interesting_skill_used_point}}</view>
                    <view>
                        <text class="hint">所有技能都有初始值，所以挑自己特别感兴趣的技能就好。</text>
                    </view>
                    <block wx:for="{{10}}">
                        <block wx:if="{{interesting_skill_single_part_visible[index]}}">
                            <view>
                                <view class="line"></view>
                                <view class="picker20">
                                    <picker bindchange="handle_interesting_skill_picker" data-index="{{index}}" range="{{normal_skill}}">
                                        <view class="picker">
                                            当前选择：{{interesting_skill[index]['name']}}
                                        </view>
                                    </picker>
                                </view>
                                <view style="margin-bottom: 40rpx">
                                    <slider bindchange="handle_interesting_skill_slider" data-index="{{index}}" min="{{skill_default_point[interesting_skill[index]['name']]}}" max="90" value="{{interesting_skill[index]['point']}}" disabled="{{interesting_skill_slider_disabled[index]}}" show-value/>
                                </view>
                                <block wx:if="{{interesting_skill_single_part_btn_visible[index]}}">
                                    <button class="interesting_skill_single_btn" @tap="handle_interesting_single_part" data-index="{{index}}">+</button>
                                </block>
                            </view>
                        </block>
                    </block>
                    <button class="final_part_btn" @tap="handle_interesting_skill_next" data-index="{{index}}" type="primary" disabled="{{interesting_skill_btn_disable}}">{{interesting_skill_btn_text}}</button>
                </view>
            </block>

            <block wx:if="{{characteristic_part}}">
                <view>
                    <view>
                        <view class="line"></view>
                        <view>选点形容词形容你的调查员</view>
                        <picker mode="multiSelector" bindchange="handler_characteristic_multi_picker" value="{{person_label}}" range="{{person_label_data}}">
                            <view class="picker20">
                                当前选择：{{person_label_data[0][person_label[0]]}}，{{person_label_data[1][person_label[1]]}}，{{person_label_data[2][person_label[2]]}}
                            </view>
                        </picker>
                    </view>

                    <block wx:for="{{6}}">
                        <view class="line"></view>
                        <view>{{person_multi_text[index]}}</view>
                        <picker mode="selector" bindchange="handler_characteristic_picker" data-index="{{index}}" range="{{person_multi_range[index]}}">
                            <view class="picker20">
                                当前选择：{{person_multi_property[index]}}
                            </view>
                        </picker>
                        <view class="input_block">
                            <input bindconfirm="handler_characteristic_input" data-index="{{index}}" maxlength="32" placeholder="具体方向或者其他（选填）" type="text" />
                        </view>
                    </block>
                    <button class="final_part_btn" @tap="handle_person_next" type="primary" disabled="{{person_btn_disable}}">{{person_btn_text}}</button>
                </view>
            </block>

        </view>
    </view>
</template>

<script>
import wepy from 'wepy'
import MyInterval from '../utils/MyInterval'

export default class IndexPage extends wepy.page {

    customData = {};  // 自定义数据

    customFunction ()　{}//自定义方法

    handler_start_next(e) {
        let animation = wx.createAnimation({
            duration: 800,
            transformOrigin: "50% 20%"
        })
        animation.scale(0, 0).opacity(0).step()
        this.start_animation = animation.export()

        setTimeout(() => {
            this.start_part = false;
            this.dice_in();
            this.$apply();
        }, 1000);
    }

    // 控制骰子动作的启停
    control_dice(e) {
        this.dice_action = !this.dice_action;
        let index = e.currentTarget.dataset.index;

        for (let i=0;i<this.property.length;i++) {

            if (i === index) {
                if (this.dice_action) {
                    this.property[i].status = 'Stop';
                } else {

                    let tmp_dice = [];
                    for (let i=0;i<2;i++) {
                      tmp_dice.push(Math.floor(Math.random()*6 + 1))
                    }
                    if (index === 6 || index === 7 ) {
                        tmp_dice.push(6)
                    } else {
                        tmp_dice.push(Math.floor(Math.random()*6 + 1))
                    }

                    let sum = 0;
                    for (let i in tmp_dice) {sum += tmp_dice[i]}
                    sum *= 5;
                    this.property[i].status = sum;
                    this.property[i].sum = sum;
                    this.init_dice = tmp_dice;
                    this.property[i].dice_lock = true;
                    this.dice_count += 1;
                }
                  continue
            }

            if (this.property[i].sum === 0) {
                this.property[i].dice_lock = !this.property[i].dice_lock
            }
        }

        if (this.dice_count === this.property.length) {
            this.dice_btn_disable = false
        }
    }

    handle_dice_next() {
        this.dice_out()
        this.age_in()
    }

    dice_in() {

        this.dice_part=true;
        this.$apply();

        let animation = wx.createAnimation({
            duration: 300,
            transformOrigin: "50% 50%"
        })
        animation.scale(1, 1).opacity(1).step()
        this.dice_animation = animation.export()

    }

    dice_out(time) {
        if (typeof time !== "number"){
            time = 800
        }
        let animation = wx.createAnimation({
            duration: time,
            transformOrigin: "50% 20%"
        })
        animation.scale(0, 0).opacity(0).step()
        this.dice_animation = animation.export()

        setTimeout(() => {
            this.dice_part = false;
            this.init_dice = [1, 1, 1]
            this.$apply();
        }, 1000);
    }

    age_change(e) {
        let age = e.detail.value
        for (let i in this.age_data) {
            if (age <= this.age_data[i].age) {
                this.age_affect = this.age_data[i].text
                break
            }
        }
        this.age = age;
    }

    age_btn() {
        this.age_affect_block = true
        this.age_slider_lock = true
        this.age_btn_hidden = false
    }

    handle20picker(e) {
        let index = e.detail.value
        if (index[0] === 0) {
            this.tmp_disable_str = index[1]
            this.tmp_disable_siz = 5 - index[1]
        } else {
            this.tmp_disable_siz = index[1]
            this.tmp_disable_str = 5 - index[1]
        }


        this.age_affect_20_multiArray_index = index

    }

    // 重掷幸运
    reroll_luck_dice() {
        this.dice_action = !this.dice_action;
        if (!this.dice_action) {
            let sum = 0
            let tmp_dice = [];
            for (let i=0; i<3; i++) {
                let n = Math.floor(Math.random()*6 + 1)
                tmp_dice.push(n)
                sum += n
            }
            sum *= 5
            if (sum < this.property[8].sum){
                this.reroll_luck_btn_text = '没事发生，现在你的幸运还是' + this.property[8].sum
            } else {
                this.property[8].sum = sum
                this.reroll_luck_btn_text = '哇喔，你现在的幸运提高到' + this.property[8].sum + '了'
            }
            this.reroll_luck_btn = true
            this.init_dice = tmp_dice
            this.next_age = false


        } else {
            this.reroll_luck_btn_text = 'Stop'
        }
    }

    handle20next() {
        this.property[0].sum -= this.tmp_disable_str
        this.property[2].sum -= this.tmp_disable_siz
        this.age_out()
        this.job_in()
    }

    handle40btn() {
        this.age_40_btn = true
        this.control_dice100()
        setTimeout(() => {
            let res = this.dice100_decade * 10 + this.dice100_single
            if (res > this.property[7].sum) {
                let tmp = Math.floor(Math.random()*10 + 1)
                this.property[7].sum += tmp
                this.age_40_text = '看来你从岁月的流逝中获得了一些知识，你的edu提高了' + tmp + ',现在是' + this.property[7].sum + '了'
            } else {
                this.age_40_text = '看来你并没有从岁月的流逝中获得太多知识，你的edu还是' + this.property[7].sum
            }
            this.next_age = false
            this.$apply()
        }, 1300)
    }

    handle40next() {
        this.age_out()
        this.job_in()
    }

    // 惩罚点的逻辑
    handle_age_picker(e) {
        let index = e.detail.value
        let num = e.currentTarget.dataset.num

        this.tmp_disable_str = index[0]
        this.tmp_disable_con = index[1]
        this.tmp_disable_dex = index[2]

        let dis = index[0] + index[1] + index[2] - num
        if (dis === 0) {
            this.age_help_text = '惩罚点已调整正确'
            this.punish_point_done = false
        } else if (dis < 0) {
            this.age_help_text = '请调整一下，现在还要再减去' + Math.abs(dis) + '点'
            this.punish_point_done = true
        } else {
            this.age_help_text = '请调整一下，现在超过了' + dis + '点'
            this.punish_point_done = true
        }


    }

    // 教育增加的判断
    handle_age_btn(e) {
        let index = parseInt(e.currentTarget.dataset.index)
        let times = this.age_edu_times[e.currentTarget.dataset.times_index]
        this.age_btn[index] = true

        this.control_dice100()
        setTimeout(() => {
            let res = this.dice100_decade * 10 + this.dice100_single
            if (res > this.property[7].sum) {
                let tmp = Math.floor(Math.random()*10 + 1)
                this.property[7].sum += tmp
                this.age_text[index] = '看来你从岁月的流逝中获得了一些知识，你的edu提高了' + tmp + ',现在是' +  this.property[7].sum + '了'
            } else {
                this.age_text[index] = '看来你并没有从岁月的流逝中获得太多知识，教育还是停留在' + this.property[7].sum
            }
            if (index + 1 < times) {
                this.age_btn[index+1] = false
            } else {
                this.next_age = false
            }
            this.$apply()
        }, 1800)
    }

    handle_age_next(e) {
        this.property[4].sum -= e.currentTarget.dataset.app

        this.property[0].sum -= this.tmp_disable_str
        this.property[1].sum -= this.tmp_disable_con
        this.property[3].sum -= this.tmp_disable_dex
        this.age_out()
        this.job_in()
    }

    control_dice100() {
        new MyInterval({
            loops: Math.floor(Math.random()*10 + 1) + 10,
            onUpdate: () => {
                this.dice100_decade = Math.floor(Math.random()*10)
                this.$apply()
            }
        })
        new MyInterval({
            loops: Math.floor(Math.random()*10 + 1) + 10,
            onUpdate: () => {
                this.dice100_single = Math.floor(Math.random()*10)
                this.$apply()
            }
        })
    }

    age_in() {

        this.age_part=true;
        this.$apply();

        let animation = wx.createAnimation({
            duration: 800,
            transformOrigin: "50% 50%"
        })
        animation.scale(1, 1).opacity(1).step()
        this.age_animation = animation.export()

    }

    age_out(time) {
        if (typeof time !== "number"){
            time = 800
        }
        let animation = wx.createAnimation({
            duration: time,
            transformOrigin: "50% 20%"
        })
        animation.scale(0, 0).opacity(0).step()
        this.age_animation = animation.export()

        setTimeout(() => {
            this.age_part = false;
            this.init_dice = [1, 1, 1]
            this.$apply();
        }, 1000);
    }

    job_picker(e) {
        let index = e.detail.value
        this.job = index
        this.job_title = this.job_data[index]['职业']
        this.job_detail = true
        this.job_description = this.job_data[index]['描述']

        if (this.job_data[index]['细分']) {
            this.job_subtitle = true
            this.job_sub_data = this.job_data[index]['子类']
            this.job_btn_disable = true
        } else {
            this.job_credit = this.job_data[index]['信用范围']
            this.job_skill = this.job_data[index]['本职技能']
            this.job_skill_point = this.job_data[index]['本职技能点数']
            this.job_btn_disable = false
            this.job_btn_text = this.job_title
            this.job_sub = '-'
        }
    }

    job_sub_picker(e) {
        let index = e.detail.value
        this.job_sub = index
        this.job_sub_title = this.job_btn_text = this.job_data[this.job]['子类'][index]['职业']
        this.job_credit = this.job_data[this.job]['子类'][index]['信用范围']
        this.job_skill = this.job_data[this.job]['子类'][index]['本职技能']
        this.job_skill_point = this.job_data[this.job]['子类'][index]['本职技能点数']
        this.job_btn_disable = false
        /*
        let sk = this.job_data[this.job]['子类'][index]['本职技能点数']
        if (typeof sk === "undefined") {
            this.job_skill_point = this.job_data[this.job]['本职技能点数']
        } else {
            this.job_skill_point = this.job_data[this.job]['子类'][index]['本职技能点数']
        }
        */
    }

    handle_job_next(e) {
        this.job_out()
        this.skill_in()
    }

    job_in() {
        this.job_part=true;
        this.$apply();

        let animation = wx.createAnimation({
            duration: 800,
            transformOrigin: "50% 50%"
        })
        animation.scale(1, 1).opacity(1).step()
        this.job_animation = animation.export()

    }

    job_out(time) {
        if (typeof time !== "number"){
            time = 800
        }
        let animation = wx.createAnimation({
            duration: time,
            transformOrigin: "50% 20%"
        })
        animation.scale(0, 0).opacity(0).step()
        this.job_animation = animation.export()

        setTimeout(() => {
            this.job_part = false;
            this.$apply();
        }, 1000);
        this.init_skill()
    }

    // 计算本职技能点
    calculate_skill_point(pro, time) {
        let sum = 0
        for (let i in this.property) {
            if (this.property[i].name.indexOf(pro) > -1) {
                sum = this.property[i].sum * time
                break
            }
        }
        return sum
    }

    init_skill() {
        if (this.job_btn_text !== '什么样的人') {

            // 信用评级
            let tmp = this.job_credit.split('-')
            this.skill_credit_min = this.skill_credit = parseInt(tmp[0])
            this.skill_credit_max = parseInt(tmp[1])

            this.skill_used_point += parseInt(tmp[0])

            // 处理技能点
            let sum = 0
            let pro, time
            if (this.job_skill_point.indexOf('+') < 0) {
                tmp = this.job_skill_point.split('×')
                pro = tmp[0]
                time = parseInt(tmp[1])
                sum = this.calculate_skill_point(pro, time)
            } else {
                let part1, part2
                tmp = this.job_skill_point.split('+')
                part1 = tmp[0]
                part2 = tmp[1]
                let tmp2 = part1.split('×')
                pro = tmp2[0]
                time = parseInt(tmp2[1])
                sum += this.calculate_skill_point(pro, time)

                if (part2.indexOf('或')) {
                    console.log(part2)
                    let tmp2 = part2.split('×')
                    let part3 = tmp2[0]
                    time = parseInt(tmp2[1])

                    let tmp3 = part3.split('或')
                    let pro1 = tmp3[0]
                    let pro2 = tmp3[1]

                    let tmp_sum1 = this.calculate_skill_point(pro1, time)
                    let tmp_sum2 = this.calculate_skill_point(pro2, time)

                    sum += tmp_sum1 > tmp_sum2 ? tmp_sum1 : tmp_sum2


                } else {
                    let tmp2 = part2.split('×')
                    pro = tmp2[0]
                    time = parseInt(tmp2[1])
                    sum += this.calculate_skill_point(pro, time)
                }

            }

            this.skill_point = sum

            // 更新 闪避 和 母语 的初始值
            this.skill_default_point['闪避'] = Math.floor(this.property[3].sum / 2)
            this.skill_default_point['母语'] = this.property[7].sum

            // 本职技能
            let i=0
            for (let item of this.job_skill_mapper[this.job_btn_text]) {
                if (typeof item === 'string') {
                    this.professional_skill.push(item)
                    this.skill_final_profession[i]['name'] = item
                    if (! this.skill_special_skill.hasOwnProperty(item)) {
                        this.skill_final_profession[i]['point'] = this.skill_default_point[item]
                        this.skill_profession_slider_disabled[i] = false
                    }
                } else {
                    this.option_professional_skill.push(item)
                }
                i += 1
            }
            this.$apply()
        }
    }

    handle_skill_credit(e) {
        let point = e.detail.value

        this.skill_used_point -= this.skill_credit
        this.skill_credit = point
        this.skill_used_point += point
    }

    handle_skill_picker(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)  // 8次循环的序号，主序号
        let item = e.currentTarget.dataset.item  // 技能种类
        let skill = this.skill_special_skill[item][e.detail.value]

        this.skill_final_profession[main_index]['name'] = skill
        this.skill_final_profession[main_index]['point'] = this.skill_default_point[skill]
        this.skill_profession_slider_disabled[main_index] = false
    }

    handle_skill_normal_picker(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)  // 8次循环的序号，主序号
        let skill = this.normal_skill[e.detail.value]

        this.skill_final_profession[main_index]['name'] = skill
        this.skill_final_profession[main_index]['point'] = this.skill_default_point[skill]
        this.skill_profession_slider_disabled[main_index] = false
    }

    handle_skill_option_picker(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)  // 8次循环的序号，主序号
        let item = e.currentTarget.dataset.item  // 技能种类
        let skill = item[e.detail.value]

        this.skill_final_profession[main_index]['name'] = skill
        if (!this.skill_special_skill.hasOwnProperty(skill)) {
            this.skill_final_profession[main_index]['point'] = this.skill_default_point[skill]
            this.skill_profession_slider_disabled[main_index] = false
        }

    }

    handle_skill_slider(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)  // 8次循环的序号，主序号
        let point = e.detail.value

        this.skill_used_point -= this.skill_final_profession[main_index]['point']
        this.skill_final_profession[main_index]['point'] = point
        this.skill_used_point += point
        this.skill_btn_disable = true

        if (this.skill_profession_slider_disabled.indexOf(true) > -1) {
            this.skill_btn_text = '还有技能没选择喔'
        } else if (this.skill_point < this.skill_used_point) {
            this.skill_btn_text = '不可以太贪心喔'
        } else if (this.skill_point > this.skill_used_point) {
            this.skill_btn_text = '还有没分配的技能点'
        } else {
            this.skill_btn_text = '决定好这样分配了吗？'
            this.skill_btn_disable = false
        }
    }

    handle_skill_next(e) {
        console.log(this.skill_final_profession)

        // 将技能值更新到default中去
        for (let index in this.skill_final_profession) {
            this.skill_default_point[this.skill_final_profession[index]['name']] = this.skill_final_profession[index]['point']
        }

        this.skill_out()

        this.interesting_skill_point = this.property[6].sum * 2
        this.interesting_skill_in()
    }

    skill_in() {
        this.skill_part=true;
        this.$apply();

        let animation = wx.createAnimation({
            duration: 800,
            transformOrigin: "50% 50%"
        })
        animation.scale(1, 1).opacity(1).step()
        this.skill_animation = animation.export()
    }

    skill_out(time) {
        if (typeof time !== "number"){
            time = 800
        }
        let animation = wx.createAnimation({
            duration: time,
            transformOrigin: "50% 20%"
        })
        animation.scale(0, 0).opacity(0).step()
        this.skill_animation = animation.export()

        setTimeout(() => {
            this.skill_part = false;
            this.$apply();
        }, 1000);
    }

    // 兴趣技能点
    handle_interesting_single_part(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)  // 每个部分的序号
        if (main_index < 9) {
            this.interesting_skill_single_part_btn_visible[main_index] = false  // 当前部分按钮隐藏
            this.interesting_skill_single_part_visible[main_index + 1] = true  // 显示下个部分
        }
    }

    handle_interesting_skill_picker(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)
        let skill = this.normal_skill[e.detail.value]

        this.interesting_skill[main_index]['name'] = skill
        this.interesting_skill[main_index]['point'] = this.skill_default_point[skill]
        this.interesting_skill_slider_disabled[main_index] = false

        if (this.decide_duplicate_interesting_skill()) {
            this.interesting_skill_btn_text = '请不要选重复的技能啦'
            this.interesting_skill_btn_disable = true
        } else {
            this.interesting_skill_btn_text = '决定好这样分配了吗？'
        }
    }

    handle_interesting_skill_slider(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)
        let point = parseInt(e.detail.value)

        this.interesting_skill_used_point -= this.interesting_skill[main_index]['point'] - point  // 更新用掉的技能点
        this.interesting_skill[main_index]['point'] = point
        this.interesting_skill_btn_disable = true


        if (this.decide_duplicate_interesting_skill()) {
            this.interesting_skill_btn_text = '请不要选重复的技能啦'
        } else if (this.interesting_skill_point < this.interesting_skill_used_point) {
            this.interesting_skill_btn_text = '不可以太贪心喔'
        } else if (this.interesting_skill_point > this.interesting_skill_used_point) {
            this.interesting_skill_btn_text = '还有没分配的技能点'
        } else {
                this.interesting_skill_btn_text = '决定好这样分配了吗？'
                this.interesting_skill_btn_disable = false
        }
    }

    // 兴趣技能做去重
    decide_duplicate_interesting_skill() {
        for (let item of this.interesting_skill) {
            if (item['name'] !== '-') {
                for (let nest_item of this.interesting_skill) {
                    if (item === nest_item) {
                        continue
                    }
                    if (nest_item['name'] !== '-') {
                        if (item['name'] === nest_item['name']) {
                            return true
                        }
                    } else {
                        break
                    }
                }
            } else {
                break
            }
        }
        return false
    }

    handle_interesting_skill_next() {
        this.interesting_skill_out()
        this.characteristic_in()
    }

    interesting_skill_in() {
        this.interesting_skill_part=true;
        this.$apply();

        let animation = wx.createAnimation({
            duration: 800,
            transformOrigin: "50% 50%"
        })
        animation.scale(1, 1).opacity(1).step()
        this.interesting_skill_animation = animation.export()
    }

    interesting_skill_out(time) {
        if (typeof time !== "number"){
            time = 800
        }
        let animation = wx.createAnimation({
            duration: time,
            transformOrigin: "50% 20%"
        })
        animation.scale(0, 0).opacity(0).step()
        this.interesting_skill_animation = animation.export()

        setTimeout(() => {
            this.interesting_skill_part = false;
            this.$apply();
        }, 1000);
    }

    handler_characteristic_multi_picker(e) {
        this.person_label = e.detail.value
    }

    handler_characteristic_picker(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)
        this.person_multi_property[main_index] = this.person_multi_range[main_index][e.detail.value]
    }

    handler_characteristic_input(e) {
        let main_index = parseInt(e.currentTarget.dataset.index)
        this.person_multi_property[main_index] = e.detail.value
    }

    characteristic_in() {
        this.characteristic_part=true;
        this.$apply();

        let animation = wx.createAnimation({
            duration: 800,
            transformOrigin: "50% 50%"
        })
        animation.scale(1, 1).opacity(1).step()
        this.characteristic_animation = animation.export()
    }

    characteristic_out(time) {
        if (typeof time !== "number"){
            time = 800
        }
        let animation = wx.createAnimation({
            duration: time,
            transformOrigin: "50% 20%"
        })
        animation.scale(0, 0).opacity(0).step()
        this.characteristic_animation = animation.export()

        setTimeout(() => {
            this.characteristic_part = false;
            this.$apply();
        }, 1000);
    }

    handle_person_next() {
        wx.redirectTo({
            url: 'index'
        });
    }

    onLoad () {
        let age_data = require('../common/data/age_affect_data.js');
        let job_data = require('../common/data/job.js');
        let skill_data = require('../common/data/skill_data.js');
        let feature_data = require('../common/data/feature_data.js')

        this.age_data = age_data.age_affect_data;

        this.job_data = job_data.job;

        this.job_skill_mapper = skill_data.skill_data;
        this.skill_default_point = skill_data.skill_data_default_point;
        this.skill_special_skill = {
            "社交": skill_data.skill_data_social,
            "科学": skill_data.skill_data_science,
            "艺术/手艺": skill_data.skill_data_art,
            "生存": skill_data.skill_data_survive,
            "学术": skill_data.skill_data_academic,
            "驾驶": skill_data.skill_data_drive,
            "格斗": skill_data.skill_data_fight,
            "射击": skill_data.skill_data_shot,
            "外语": skill_data.skill_data_other_language,
        };

        this.normal_skill = skill_data.skill_data_normal;


       this.person_label_data = [feature_data.feature_label_data, feature_data.feature_label_data, feature_data.feature_label_data];
      // this.person_faith_data = feature_data.feature_faith_data;
      // this.person_lover_data = feature_data.feature_lover_data;
      // this.person_lover_reason_data = feature_data.feature_lover_reason_data;
      // this.person_impressive_place_data = feature_data.feature_impressive_place_data;
      // this.person_treasure_data = feature_data.feature_treasure_data;
      // this.person_feature_data = feature_data.feature_feature_data;

       this.person_multi_range = [
            feature_data.feature_faith_data,
            feature_data.feature_lover_data,
            feature_data.feature_lover_reason_data,
            feature_data.feature_impressive_place_data,
            feature_data.feature_treasure_data,
            feature_data.feature_feature_data,
       ];

        this.dice_out(0);
        this.age_out(0);
        this.job_out(0);
        this.skill_out(0);
        this.interesting_skill_out(0);
        this.characteristic_out(0);
    }  // 在Page和Component共用的生命周期函数

    onShow () {}  // 只在Page中存在的页面生命周期函数

    config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件

    data = {
        start_part: true,
        start_animation: {},

        // 属性阶段
        dice_part: true,
        dice_animation: {},
        init_dice: [1, 1, 1],
        dice_action: false,
        dice_count: 0,
        dice_btn_disable: true,
        dice_btn_text: '下一步',

        property: [
            { name: '力量(3D6):', sum: 0, _type: 'str', status: 'Roll', dice_lock: false },
            { name: '体质(3D6):', sum: 0, _type: 'con', status: 'Roll', dice_lock: false },
            { name: '体型(3D6):', sum: 0, _type: 'siz', status: 'Roll', dice_lock: false },
            { name: '敏捷(3D6):', sum: 0, _type: 'dex', status: 'Roll', dice_lock: false },
            { name: '外貌(3D6):', sum: 0, _type: 'app', status: 'Roll', dice_lock: false },
            { name: '意志(3D6):', sum: 0, _type: 'pow', status: 'Roll', dice_lock: false },
            { name: '智力(2D6+6):', sum: 0, _type: 'int', status: 'Roll', dice_lock: false},
            { name: '教育(2D6+6):', sum: 0, _type: 'edu', status: 'Roll', dice_lock: false },
            { name: '幸运(3D6):', sum: 0, _type: 'luck', status: 'Roll', dice_lock: false },
        ],

        // 年龄阶段
        age_part: true,
        age_animation: {},
        age_data: '',
        age: 0,
        age_affect: '',
        age_slider_lock: false,
        age_affect_block: false,
        age_btn_hidden: true,

        age_affect_20_multiArray: [['力量(STR)', '体型(CON)'], [-0, -1, -2, -3, -4, -5]],
        age_affect_20_multiArray_index: [0, 0],

        tmp_disable_str: 0,
        tmp_disable_siz: 5,
        tmp_disable_con: 0,
        tmp_disable_dex: 0,

        reroll_luck_btn: false,
        reroll_luck_btn_text: '再骰一次幸运',

        next_age: true,

        dice100_decade: 0,
        dice100_single: 0,

        age_40_btn: false,
        age_40_text: '看一下岁月是否使你进步了',

        age_affect_multiArray: [
            //50
            [
                [0, -1, -2, -3, -4, -5],
                [0, -1, -2, -3, -4, -5],
                [0, -1, -2, -3, -4, -5],
            ],
            //60
            [
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10],
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10],
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10],
            ],
            //70
            [
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20],
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20],
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20],
            ],
            //80
            [
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40],
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40],
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40],
            ],
            //90
            [
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80],
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80],
                [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80],
            ],

        ],

        age_affect_multiArray_index: [0, 0, 0],
        age_help_text: '请调整相关数值⬆',

        age_edu_times: [2, 3, 4, 4, 4],
        age_btn: [false, true, true, true],
        age_text: ['看一下岁月是否使你进步了', '再看一下岁月是否使你进步了', '再再看一下岁月是否使你进步了', '再再再看一下岁月是否使你进步了'],

        punish_point_done: true,

        // 职业阶段
        job_data: {},
        job_part: false,
        job_animation: {},
        job: 0,
        job_title: '- 请选择 -',
        job_description: '',
        job_detail: false,

        job_subtitle: false,
        job_credit: '-',
        //job_credit: '30-70',
        job_skill: '-',
        job_skill_point: '-',

        job_sub: '-',
        job_sub_data: [],
        job_sub_title: '- 请选择 -',

        job_btn_text: '什么样的人',
        //job_btn_text: '考古学家',
        job_btn_disable: true,

        // 技能阶段
        job_skill_mapper: {},  // 职业对应的技能
        skill_default_point: {},  // 技能对应的初始值
        skill_special_skill: {},  // 专业化技能

        professional_skill: [],  // 单选技能，可能有专业化
        option_professional_skill: [],  // 多选技能，可能有专业化
        skill_part: true,
        skill_animation: {},
        skill_btn_disable: true,
        skill_btn_text: '决定好这样分配了吗？',

        skill_point: 0,  // 总技能点
        skill_used_point: 0,  // 用掉的技能点
        skill_credit_min: 0,
        skill_credit_max: 0,
        skill_credit: 0,  // 当前信用评级

        skill_final_profession: [
            {
                'name': '-',
                'point': '',
            },
            {
                'name': '-',
                'point': '',
            },
            {
                'name': '-',
                'point': '',
            },
            {
                'name': '-',
                'point': '',
            },
            {
                'name': '-',
                'point': '',
            },
            {
                'name': '-',
                'point': '',
            },
            {
                'name': '-',
                'point': '',
            },
            {
                'name': '-',
                'point': '',
            },
        ],  // 最终职业技能结果
        skill_profession_slider_disabled: [true, true, true, true, true, true, true, true], // 每个技能的可滑动

        // 兴趣技能部分
        normal_skill: {},
        interesting_skill_part: true,
        interesting_skill_animation: {},
        interesting_skill_btn_disable: true,
        interesting_skill_btn_text: '决定好这样分配了吗？',

        interesting_skill_point: 0,  // 总技能点
        interesting_skill_used_point: 0,  // 用掉的技能点

        interesting_skill: [{'name': '-', 'point': 0}, {'name': '-', 'point': 0}, {'name': '-', 'point': 0}, {'name': '-', 'point': 0}, {'name': '-', 'point': 0}, {'name': '-', 'point': 0}, {'name': '-', 'point': 0}, {'name': '-', 'point': 0}, {'name': '-', 'point': 0}, {'name': '-', 'point': 0}],
        interesting_skill_single_part_visible: [true, false, false, false, false, false, false, false, false, false],
        interesting_skill_single_part_btn_visible: [true, true, true, true, true, true, true, true, true, false],
        interesting_skill_slider_disabled: [true, true, true, true, true, true, true, true, true, true],

        // 背景部分
        characteristic_part: true,
        characteristic_animation: {},

        person_btn_disable: true,
        person_btn_text: '确定好做一个这样的人了吗',

        person_label_data: '',
        person_faith_data: '',
        person_lover_data: '',
        person_lover_reason_data: '',
        person_impressive_place_data: '',
        person_treasure_data: '',
        person_feature_data: '',

        person_multi_text: ['为你调查员选择信仰方向', '为你调查员选择重要的人', '为你调查员选择羁绊的原因', '为你调查员选择意义非凡的地方', '为你调查员选择珍贵之物', '为你调查员贴个标签'],
        person_multi_range: [],
        person_multi_property: ['请选择', '请选择', '请选择', '请选择', '请选择', '请选择'],

        person_label: [0, 1, 2],
       // person_faith: '请选择',
       // person_lover: '请选择',
       // person_lover_reason: '请选择',
       // person_impressive_place: '请选择',
       // person_treasure: '请选择',
       // person_feature: '请选择',

       // person_loss: '',  // 损伤
       // person_bruise: '',  // 伤痕
       // person_fear: '',  // 恐惧
       // person_addictive_ingredient: '',  // 成瘾物



    };  // 页面所需数据均需在这里声明，可用于模板数据绑定

    components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件

    mixins = [];  // 声明页面所引用的Mixin实例

    computed = {

    };  // 声明计算属性（详见后文介绍）

    watch = {
        person_multi_property (new_value, old_value) {
            let flag = true
            for (let item of new_value) {
                if (item === '请选择') {
                    this.person_btn_text = '丰满的调查员会更有趣'
                    flag = false
                    break
                }
            }

            if (flag) {
                this.person_btn_text = '确定好做一个这样的人了吗'
                this.person_btn_disable = false
            }
            this.$apply()
        }
    };  // 声明数据watcher（详见后文介绍）

    methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明

    events = {};  // 声明组件之间的事件处理函数



  }

</script>